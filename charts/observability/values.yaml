# Default values for observability.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

enabled: true

imagePullSecrets: []

grafana:
  serviceAccountName: ""
  resources: {}
  image:
    repository: grafana/grafana
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "9.5.1"
  replicaCount: 1

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: true
    className: "nginx"
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: grafana.default.svc.cluster.local
        paths:
          - path: /
            pathType: ImplementationSpecific

  # livenessProbe:
  #   httpGet:
  #     path: /
  #     port: http
  # readinessProbe:
  #   httpGet:
  #     path: /
  #     port: http

  # Additional volumes on the output Deployment definition.
  volumes:
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false
    - name: config
      configMap:
        name: grafana

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: config
      mountPath: "/etc/grafana/provisioning/datasources/"
      readOnly: true

  envs:
    - name: GF_AUTH_ANONYMOUS_ENABLED
      value: "true"
    - name: GF_AUTH_ANONYMOUS_ORG_ROLE
      value: "Admin"
    - name: GF_AUTH_DISABLE_LOGIN_FORM
      value: "true"
    - name: GF_FEATURE_TOGGLES_ENABLE
      value: "traceqlEditor"

prometheus:
  serviceAccountName: ""
  resources: {}
  image:
    repository: prom/prometheus
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  replicaCount: 1
  service:
    type: ClusterIP
    port: 9090

  ingress:
    enabled: true
    className: "nginx"
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: prometheus.default.svc.cluster.local
        paths:
          - path: /
            pathType: ImplementationSpecific

  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  # Additional volumes on the output Deployment definition.
  volumes:
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false
    - name: config
      configMap:
        name: prometheus

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: config
      mountPath: "/configs/"
      readOnly: true

  envs: []

tempo:
  serviceAccountName: ""
  resources: {}
  image:
    repository: grafana/tempo
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  replicaCount: 1
  service:
    type: ClusterIP
    port: 4318

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: tempo.default.svc.cluster.local
        paths:
          - path: /
            pathType: ImplementationSpecific

  # livenessProbe:
  #   httpGet:
  #     path: /
  #     port: http
  # readinessProbe:
  #   httpGet:
  #     path: /
  #     port: http

  # Additional volumes on the output Deployment definition.
  volumes:
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false
    - name: config
      configMap:
        name: tempo

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: config
      mountPath: "/configs/"
      readOnly: true

  envs: []

otelCollector:
  serviceAccountName: ""
  resources: {}
  image:
    repository: otel/opentelemetry-collector-contrib
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "0.81.0"
  replicaCount: 1
  service:
    type: ClusterIP
    port: 4318

  # livenessProbe:
  #   httpGet:
  #     path: /
  #     port: http
  # readinessProbe:
  #   httpGet:
  #     path: /
  #     port: http

  # Additional volumes on the output Deployment definition.
  volumes:
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false
    - name: config
      configMap:
        name: otel-collector

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: config
      mountPath: "/configs/"
      readOnly: true

  envs: []
